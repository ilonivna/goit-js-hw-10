{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\nlet timeInterval;\nconst startBtn = document.querySelector(\"button\");\nconst inputTime = document.querySelector(\"#datetime-picker\");\nconst showTime = document.querySelectorAll(\".value\");\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    timeInterval = userSelectedDate - options.defaultDate;\n    if (timeInterval < 1) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n    } else {\n      startBtn.disabled = false;\n      inputTime.disabled = true;\n    }\n  },\n};\n\nconst calendar = flatpickr(\"#datetime-picker\", options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener(\"click\", event => {\n  const timeRepeat = setInterval(() => {\n    timeInterval = userSelectedDate - new Date();\n    inputTime.disabled = true;\n\n    if (timeInterval < 1) {\n      startBtn.disabled = true;\n      inputTime.disabled = false;\n      clearInterval(timeRepeat);\n      return;\n    }\n\n    const timer = convertMs(timeInterval);\n\n    showTime[0].innerText = timer.days.toString().padStart(2, \"0\");\n    showTime[1].innerText = timer.hours.toString().padStart(2, \"0\");\n    showTime[2].innerText = timer.minutes.toString().padStart(2, \"0\");\n    showTime[3].innerText = timer.seconds.toString().padStart(2, \"0\");\n    \n  }, 1000);\n});\n\n"],"names":["userSelectedDate","timeInterval","startBtn","inputTime","showTime","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","event","timeRepeat","timer"],"mappings":"+IAMA,IAAIA,EACAC,EACJ,MAAMC,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,iBAAiB,QAAQ,EAE7CC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BN,EAAmBM,EAAc,CAAC,EAClCL,EAAeD,EAAmBK,EAAQ,YACtCJ,EAAe,EACjBM,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,GAEDL,EAAS,SAAW,GACpBC,EAAU,SAAW,GAExB,CACH,EAEiBK,EAAU,mBAAoBH,CAAO,EAEtD,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAZ,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASa,GAAS,CAC1C,MAAMC,EAAa,YAAY,IAAM,CAInC,GAHAf,EAAeD,EAAmB,IAAI,KACtCG,EAAU,SAAW,GAEjBF,EAAe,EAAG,CACpBC,EAAS,SAAW,GACpBC,EAAU,SAAW,GACrB,cAAca,CAAU,EACxB,MACD,CAED,MAAMC,EAAQR,EAAUR,CAAY,EAEpCG,EAAS,CAAC,EAAE,UAAYa,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7Db,EAAS,CAAC,EAAE,UAAYa,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9Db,EAAS,CAAC,EAAE,UAAYa,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEb,EAAS,CAAC,EAAE,UAAYa,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAEjE,EAAE,GAAI,CACT,CAAC"}